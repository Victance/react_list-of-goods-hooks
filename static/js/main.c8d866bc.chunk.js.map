{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","goods","useState","isStarted","switchStart","NONE","sortBy","setSortBy","isReversed","switchReverse","sort","g1","g2","ALPHA","localeCompare","LENGTH","length","reverse","className","type","onClick","map","good","ReactDOM","render","document","getElementById"],"mappings":"wJAiBKA,E,4CAbCC,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,iBAAAA,I,oBAAAA,M,KAME,IAAME,EAAgB,WAC3B,IAAMC,EAAK,UAAOF,GAClB,EAAiCG,oBAAS,GAA1C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAA4BF,mBAASJ,EAASO,MAA9C,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAAoCL,oBAAS,GAA7C,mBAAOM,EAAP,KAAmBC,EAAnB,KAuBA,OAjBAR,EAAMS,MAAK,SAACC,EAAIC,GACd,OAAQN,GACN,KAAKR,EAASe,MACZ,OAAOF,EAAGG,cAAcF,GAE1B,KAAKd,EAASiB,OACZ,OAAOJ,EAAGK,OAASJ,EAAGI,OAExB,QACE,OAAO,MAITR,GACFP,EAAMgB,UAIN,qBAAKC,UAAU,MAAf,SACGf,EAEG,qCACE,wBAAQgB,KAAK,SAASC,QAAS,kBAAMb,EAAUT,EAASe,QAAxD,iCAIA,wBAAQM,KAAK,SAASC,QAAS,kBAAMb,EAAUT,EAASiB,SAAxD,4BAIA,wBAAQI,KAAK,SAASC,QAAS,kBAAMX,GAAeD,IAApD,qBAIA,wBAAQW,KAAK,SAASC,QAvClB,WACZX,GAAc,GACdF,EAAUT,EAASO,OAqCX,mBAIA,oBAAIa,UAAU,QAAd,SACGjB,EAAMoB,KAAI,SAAAC,GAAI,OACb,oBAAIJ,UAAU,cAAd,SAAwCI,GAAPA,WAMvC,wBAAQH,KAAK,SAASC,QAAS,kBAAMhB,GAAaD,IAAlD,sBC5EVoB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,U","file":"static/js/main.c8d866bc.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHA,\n  LENGTH,\n}\n\nexport const App: React.FC = () => {\n  const goods = [...goodsFromServer];\n  const [isStarted, switchStart] = useState(false);\n  const [sortBy, setSortBy] = useState(SortType.NONE);\n  const [isReversed, switchReverse] = useState(false);\n  const reset = () => {\n    switchReverse(false);\n    setSortBy(SortType.NONE);\n  };\n\n  goods.sort((g1, g2) => {\n    switch (sortBy) {\n      case SortType.ALPHA:\n        return g1.localeCompare(g2);\n\n      case SortType.LENGTH:\n        return g1.length - g2.length;\n\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    goods.reverse();\n  }\n\n  return (\n    <div className=\"App\">\n      {isStarted\n        ? (\n          <>\n            <button type=\"button\" onClick={() => setSortBy(SortType.ALPHA)}>\n              Sort alphabetically\n            </button>\n\n            <button type=\"button\" onClick={() => setSortBy(SortType.LENGTH)}>\n              Sort by length\n            </button>\n\n            <button type=\"button\" onClick={() => switchReverse(!isReversed)}>\n              Reverse\n            </button>\n\n            <button type=\"button\" onClick={reset}>\n              Reset\n            </button>\n\n            <ul className=\"Goods\">\n              {goods.map(good => (\n                <li className=\"Goods__item\" key={good}>{good}</li>\n              ))}\n            </ul>\n          </>\n        )\n        : (\n          <button type=\"button\" onClick={() => switchStart(!isStarted)}>\n            Start\n          </button>\n        )}\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}